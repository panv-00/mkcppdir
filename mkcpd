#!/usr/bin/bash

usage() {
  echo "Usage: $0 -n project_name -m module1 module2 ..."
  exit 1
}

if [[ $# -lt 4 ]]; then
  usage
fi

while getopts ":n:m:" opt; do
  case ${opt} in
  n)
    PROJECT_NAME=$OPTARG
    ;;
  m)
    shift $((OPTIND - 2))
    MODULES=("${@:2}")
    break
    ;;
  *)
    usage
    ;;
  esac
done

AUTHOR="panv-00"
DATE=$(date +'%Y-%m-%d')
UPPER_PROJECT_NAME=$(echo "${PROJECT_NAME^^}" | tr '-' '_')

mkdir -p "$PROJECT_NAME"/{src,build/objects}
touch "$PROJECT_NAME/LICENSE"
touch "$PROJECT_NAME/README.md"
touch "$PROJECT_NAME/Makefile"
touch "$PROJECT_NAME/build/Makefile"
touch "$PROJECT_NAME/.gitignore"

cat >"$PROJECT_NAME/LICENSE" <<EOF
MIT License

Copyright (c) $DATE $AUTHOR

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF

cat >"$PROJECT_NAME/.gitignore" <<EOF
# Ignore binary
/${PROJECT_NAME}

# Ignore objects
/build/objects/*
EOF

{
  echo "default:"
  printf "\t@+make -C build\n\n"
  echo "clean:"
  printf "\trm -rf build/objects/*\n"
  printf "\trm -f ${PROJECT_NAME}\n"
  printf "\t@echo \"Clean!\"\n"
} >"$PROJECT_NAME/Makefile"

cat >"$PROJECT_NAME/README.md" <<EOF
# ${PROJECT_NAME^}

## Introduction

...

## License

This project is licensed under the MIT License - see the LICENSE file for details.
EOF

cat >"$PROJECT_NAME/build/Makefile" <<EOF
# Compiler and flags
CC := gcc
CFLAGS := -D_GNU_SOURCE -std=c99 -Wall -Werror -O3 -g
LDFLAGS := -lssl -lcrypto

# Directories
SRC_DIR := ../src
OBJ_DIR := ./objects
BIN := ../${PROJECT_NAME}

# Source and object files
SRC_FILES := \$(shell find -L \$(SRC_DIR) -name '*.c')
OBJ_FILES := \$(patsubst \$(SRC_DIR)/%.c, \$(OBJ_DIR)/%.o, \$(SRC_FILES))

# Default target
all: \$(BIN)

# Link final binary
\$(BIN): \$(OBJ_FILES)
EOF

{
  printf "\t@mkdir -p \$(dir \$@)\n"
  printf "\t\$(CC) \$(OBJ_FILES) -o \$@ \$(LDFLAGS)\n\n"
  echo "# Compile source files"
  echo "\$(OBJ_DIR)/%.o: \$(SRC_DIR)/%.c"
  printf "\t@mkdir -p \$(dir \$@)\n"
  printf "\t\$(CC) \$(CFLAGS) -c \$< -o \$@\n"
} >>"$PROJECT_NAME/build/Makefile"

cat >"$PROJECT_NAME/src/${PROJECT_NAME}.h" <<EOF
/**
 * File: ${PROJECT_NAME}.h
 * Author: ${AUTHOR}
 * Date: ${DATE}
 */

#ifndef ${UPPER_PROJECT_NAME}_H
#define ${UPPER_PROJECT_NAME}_H

#include <stdio.h>
EOF

for mod in "${MODULES[@]}"; do
  echo "#include \"${mod}.h\"" >>"$PROJECT_NAME/src/${PROJECT_NAME}.h"
done

cat >>"$PROJECT_NAME/src/${PROJECT_NAME}.h" <<EOF

#endif
EOF

cat >"$PROJECT_NAME/src/${PROJECT_NAME}.c" <<EOF
/**
 * File: ${PROJECT_NAME}.c
 * Author: ${AUTHOR}
 * Date: ${DATE}
 */

#include "${PROJECT_NAME}.h"

int main(int argc, char *argv[])
{
  printf("Hello ${PROJECT_NAME^}!\n");
  return 0;
}
EOF

for mod in "${MODULES[@]}"; do
  UPPER_MOD=$(echo "$mod" | tr '[:lower:]' '[:upper:]')

  cat >"$PROJECT_NAME/src/${mod}.h" <<EOF
/**
 * File: ${mod}.h
 * Author: ${AUTHOR}
 * Date: ${DATE}
 */

#ifndef ${UPPER_MOD}_H
#define ${UPPER_MOD}_H

typedef struct
{
  int i;

} ${mod};

#endif
EOF

  cat >"$PROJECT_NAME/src/${mod}.c" <<EOF
/**
 * File: ${mod}.c
 * Author: ${AUTHOR}
 * Date: ${DATE}
 */

#include "${mod}.h"
EOF
done

echo "âœ… Project '$PROJECT_NAME' created successfully."
